{% extends "layout/layout.twig" %}
{% from "macros.twig" import render_classes %}
{% block title %}{% trans 'Search' %} | {{ parent() }}{% endblock %}
{% block body_class 'search-page' %}

{% block below_menu %}
    <div class="uk-container uk-background-muted">
        <ul class="uk-breadcrumb">
            <li class="uk-first-column"><a href="{{ path('index.html') }}">{% trans 'Home' %}</a></li>
            <li><span>{% trans 'Search' %}</span></li>
        </ul>
    </div>
{% endblock %}

{% block page_content %}
    <div class="uk-container uk-container-expand">
        <div class="uk-grid uk-grid-medium" data-uk-grid uk-sortable="handle: .sortable-icon">
            <div class="uk-width-1-1@l">
                <div class="uk-card uk-card-default">
                    <div class="uk-card-header">
                        <h3 class="uk-card-title">{% trans 'Search' %}</h3>
                    </div>
                    <div class="uk-card-body">
                        <div class="uk-card-body">
                            <p>{% trans 'This page allows you to search through the API documentation for
    specific terms. Enter your search words into the box below and click
    "Submit". The search will be performed on namespaces, classes, interfaces,
    traits, functions, and methods.' %}</p>
                            <form action="{{ path('search.html') }}">
                                <div class="uk-margin">
                                    <label class="uk-form-label" for="search"></label>
                                    <div class="uk-form-controls">
                                        <input class="uk-input uk-width-medium" name="search" id="search" type="search" placeholder="{% trans 'Search' %}" spellcheck="false" autocorrect="off" autocomplete="off" autocapitalize="off">
                                        <button type="submit" class="uk-button uk-button-default">{% trans 'Submit' %}</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <div id="search-results-header" class="uk-card uk-card-default" style="margin-top: 10px">
                    <div class="uk-card-header">
                        <h3 class="uk-card-title">{% trans 'Search Results' %}</h3>
                    </div>
                    <div class="uk-card-body">
                        <div class="search-bar uk-hidden" id="search-page-progress-bar-container">
                            <div class="progress">
                                <div class="progress-bar" role="progressbar" id="search-page-progress-bar"
                                     aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0"></div>
                            </div>
                        </div>
                        <div class="container-fluid" id="search-results-container">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    {{ block('js_search') }}
{% endblock %}

{% block js_search %}
<script type="text/javascript">
    const AziraxSearch = {
        /** @var boolean */
        pageFullyLoaded: false,
        /** @var string|null */
        searchTerm: null,
        /** @var autoComplete|null */
        autoCompleteJS: null,
        /** @var HTMLElement|null */
        aziraxSearchPageAutoCompleteProgressBarContainer: null,
        /** @var HTMLElement|null */
        aziraxSearchPageAutoCompleteProgressBar: null,
        searchTypeClasses: {
            '{{ 'Namespace'|trans|escape('js') }}': 'uk-label uk-label-default',
            '{{ 'Class'|trans|escape('js') }}': 'uk-label uk-label-info',
            '{{ 'Trait'|trans|escape('js') }}': 'uk-label uk-label-success',
            '{{ 'Interface'|trans|escape('js') }}': 'uk-label uk-label-primary',
            '{{ 'Enum'|trans|escape('js') }}': 'uk-label uk-label-warning',
            '{{ 'Method'|trans|escape('js') }}': 'uk-label uk-label-danger',
            '{{ 'Function'|trans|escape('js') }}': 'uk-label uk-label-danger',
            '_': 'uk-label uk-label-warning'
        },
        longTypes: {
            'N': '{{ 'Namespace'|trans|escape('js') }}',
            'C': '{{ 'Class'|trans|escape('js') }}',
            'T': '{{ 'Trait'|trans|escape('js') }}',
            'I': '{{ 'Interface'|trans|escape('js') }}',
            'E': '{{ 'Enum'|trans|escape('js') }}',
            'M': '{{ 'Method'|trans|escape('js') }}',
            'F': '{{ 'Function'|trans|escape('js') }}',
            '_': 'uk-label uk-label-warning'
        },
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                const name = 'search';
                const regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                const results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },
        /**
         * Get a search class for a specific type
         */
        getSearchClass: function(type) {
            return AziraxSearch.searchTypeClasses[type] || AziraxSearch.searchTypeClasses['_'];
        },
        /**
         * Get the long type name
         */
        getLongType: function(type) {
            return AziraxSearch.longTypes[type] || AziraxSearch.longTypes['_'];
        },
        pageFullyLoaded: function (event) {// Will get fired by the main azirax.js script
            AziraxSearch.searchTerm = AziraxSearch.cleanSearchTerm();
            AziraxSearch.searchTermForEngine = Azirax.cleanSearchQuery(AziraxSearch.searchTerm);
            AziraxSearch.aziraxSearchPageAutoCompleteProgressBarContainer = document.getElementById('search-page-progress-bar-container');
            AziraxSearch.aziraxSearchPageAutoCompleteProgressBar = document.getElementById('search-page-progress-bar');
            AziraxSearch.pageFullyLoaded = true;
            AziraxSearch.launchSearch();
        },
        showNoResults: function() {
            document.getElementById('search-results-container').innerText = 'No\u0020results\u0020were\u0020found';
        },
        launchSearch: function (event) {
            if (
                AziraxSearch.searchTermForEngine === null
                || (typeof AziraxSearch.searchTermForEngine === 'string' && AziraxSearch.searchTermForEngine.length === 0)
                || typeof AziraxSearch.searchTermForEngine !== 'string'
            ) {
                document.getElementById('search-results-header').className = 'uk-hidden';
                // Stop the process here
                return;
            }
            // Set back backslashes to non escaped backslashes
            document.getElementById('search').value = AziraxSearch.searchTermForEngine.replace(/\\\\/g, '\\');

            // Check if the lib is loaded
            if (typeof autoComplete === 'function') {
                AziraxSearch.bootAutoComplete();
            }
        },
        bootAutoComplete: function () {
            AziraxSearch.autoCompleteJS = new autoComplete(
                {
                    selector: '#search',
                    searchEngine: function (query, record) {
                        return Azirax.searchEngine(query, record);
                    },
                    submit: true,
                    data: {
                        src: function (q) {
                            return Azirax.loadAutoCompleteData(q);
                        },
                        keys: ['n'],// Data 'Object' key to be searched
                        cache: false, // Is not compatible with async fetch of data
                    },
                    query: (input) => {
                        return Azirax.cleanSearchQuery(input);
                    },
                    trigger: (query) => {
                        return Azirax.cleanSearchQuery(query).length > 0;
                    },
                    resultsList: {
                        tag: 'ul',
                        class: 'search-results',
                        destination: '#search-results-container',
                        position: 'afterbegin',
                        maxResults: 500,
                        noResults: false,
                    },
                    resultItem: {
                        tag: 'li',
                        class: 'search-results-result',
                        highlight: 'search-results-highlight',
                        selected: 'search-results-selected',
                        element: function (item, data) {
                            item.innerHTML = '';// Clean up the content
                            let elementH2 = document.createElement('h2');
                            elementH2.className = 'uk-clearfix';

                            let elementLink = document.createElement('a');
                            elementLink.innerText = data.value.n;
                            elementLink.href = data.value.p;
                            elementH2.appendChild(elementLink);

                            let longType = AziraxSearch.getLongType(data.value.t);
                            let className = AziraxSearch.getSearchClass(longType);

                            let divElement = document.createElement('div');
                            divElement.className = 'search-type type-' + longType;
                            let divSpanElement = document.createElement('span');
                            divSpanElement.className = 'pull-right label ' + className;
                            divSpanElement.innerText = longType;
                            divElement.appendChild(divSpanElement);
                            elementH2.appendChild(divElement);

                            item.appendChild(elementH2);

                            if (typeof data.value.f === 'object') {
                                let fromElement = document.createElement('div');
                                fromElement.className = 'search-from';
                                fromElement.innerText = 'from\u0020';
                                let fromElementLink = document.createElement('a');
                                fromElementLink.href = data.value.f.p;
                                fromElementLink.innerText = data.value.f.n;
                                fromElement.appendChild(fromElementLink);
                                item.appendChild(fromElement);
                            }

                            let divSearchDescription = document.createElement('div');
                            divSearchDescription.className = 'search-description';
                            if (data.value.t === 'N') {// Is a namespace
                                data.value.d = 'Namespace\u0020\u0025s'.replace('%s', data.value.n);
                            }
                            if (typeof data.value.d === 'string') {
                                let paragraphElement = document.createElement('p');
                                paragraphElement.innerHTML = data.value.d;
                                divSearchDescription.appendChild(paragraphElement);
                            }
                            item.appendChild(divSearchDescription);
                        },
                    },
                }
            );
            Azirax.markInProgress();
            AziraxSearch.autoCompleteJS.start(AziraxSearch.searchTerm);
            AziraxSearch.autoCompleteJS.unInit();// Stop the work, wait for the user to hit submit
            document.getElementById('search').addEventListener('results', function (event) {
                Azirax.markProgressFinished();
                if (event.detail.results.length === 0) {
                    AziraxSearch.showNoResults();
                }
            });
        }
    };
</script>
{% endblock %}
